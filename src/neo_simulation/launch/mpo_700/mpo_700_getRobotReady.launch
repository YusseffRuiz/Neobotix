<?xml version="1.0" encoding="UTF-8"?>
<launch>
<!--Load Map-->

<!--Load Map-->


<!--Initial Position-->
    <arg name="x_pos" default="0.0"/>
    <arg name="y_pos" default="0.0"/>
    <arg name="z_pos" default="0.0"/>
    <arg name="roll" default="0.0"/>
    <arg name="pitch" default="0.0"/>
    <arg name="yaw" default="0.0"/> <!-- 1.578 for PI // in BRL | 3.1416 for Obstacle World | non for regular -->

<!--Initial Position in Neo tracks
    <arg name="x_pos" default="0.0"/>
    <arg name="y_pos" default="0.0"/>
    <arg name="z_pos" default="0.0"/>-->
    <!--To launch scan unifier set the value to true-->
    <arg name="scanunifier" value="true"/>
    <!--Modify depending on the Map // Turn off loading map-->
    <arg name="env_map" value="true"/>
    <arg name="map_name" value="BRLMap1"/>
    <arg name="rviz_config" value="mapping"/>




<!--Robot description to param server-->
  <param name="robot_description" command="$(find xacro)/xacro.py '$(find neo_simulation)/robots/mpo_700/mpo_700.urdf.xacro'"/>


  <!--To publish Joint and Robot state-->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
	<param name="rate" value="20.0"/>
  </node>

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher">
	<param name="publish_frequency" value="20.0"/>
  </node>

<!---=================================================================================================================================================================-->
<!-- Launch RVIZ -->
	<arg name="rvizconfig" default="$(find neo_simulation)/config/mpo_700/rviz/$(arg rviz_config)_config.rviz" />
	<node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="true"/>

<!---=================================================================================================================================================================-->

  <!-- MAP SERVER -->
<!--if arg env_map is set to true-->
  <group if="$(arg env_map)">
  <node name="map_server" pkg="map_server" type="map_server" args="$(find neo_simulation)/maps/$(arg map_name).yaml">
  </node>

  <node pkg="amcl" type="amcl" name="amcl">
  	<remap from="scan" to="/cob_scan_unifier/scan_unified"/>
  	<rosparam file="$(find neo_simulation)/config/mpo_700/amcl/amcl_config.yaml" command="load" />
  </node>
   </group>

</launch>
